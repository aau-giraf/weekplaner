#name: CI
#
#on: [push]
#env:
#  flutter_channel: 'stable'
#  flutter_version: '1.20.x'
#  java_version: '12.x'
#
#jobs:
#  # Android Build and Upload
#  build-and-test-android:
#    name: Android on ${{ matrix.os }}
#    runs-on: ${{ matrix.os }}
#    strategy:
#      matrix:
#        os: [ubuntu-latest, windows-latest, macos-latest]
#        include:
#          - os: ubuntu-latest
#            flutter_path: /opt/hostedtoolcache/flutter
#          - os: macos-latest
#            flutter_path: /Users/runner/hostedtoolcache/flutter
#          - os: windows-latest
#            flutter_path: '%USERPROFILE%\hostedtoolcache\flutter'
#
#    steps:
#      - uses: actions/checkout@v2
#      - uses: actions/setup-java@v1
#        with:
#          java-version: ${{ env.java_version }}
#      - name: Cache Flutter dependencies
#        uses: actions/cache@v1
#        with:
#          path: ${{ matrix.flutter_path }}
#          key: ${{ runner.os }}-flutter-${{ env.flutter_version }}
#      - uses: subosito/flutter-action@v1
#        with:
#          flutter-version: ${{ env.flutter_version }}
#          channel: ${{ env.flutter_channel }}
#          path: ${{ matrix.flutter_path }}
#      - run: flutter pub get
#        name: Get dependencies
#
#      - run: flutter doctor
#        name: Doctor
#
#      - run: flutter analyze
#        name: Linter
#      - run: flutter test --coverage
#        name: Tests
#      - name: Upload coverage to Codecov
#        uses: codecov/codecov-action@v1
#      - run: flutter build appbundle --release --build-number ${{ github.run_id }}
#        env:
#          GIRAF_KEYSTORE_PASSWORD: ${{ secrets.GIRAF_KEYSTORE_PASSWORD }}
#        name: Build appbundle for Play Store
#      - name: Upload Artifact
#        uses: actions/upload-artifact@v1.0.0
#        with:
#          name: Giraf Weekplanner
#          path: build/app/outputs/bundle/release
#  deploy-to-playstore:
#    if: github.ref == 'refs/heads/master'
#    needs: build-and-test-android
#    name: Upload to Google Play Store
#    runs-on: ubuntu-latest
#    steps:
#      - name: Download artifact
#        uses: actions/download-artifact@v1.0.0
#        with:
#          # Artifact name
#          name: Giraf Weekplanner
#          # Destination path
#          path: build/app/outputs/bundle/release
#      - name: Create service_account.json
#        run: echo '${{ secrets.SERVICE_ACCOUNT_JSON }}' > service_account.json
#
#      - name: Publish
#        uses: r0adkll/upload-google-play@v1.0.7
#        with:
#          serviceAccountJson: service_account.json
#          packageName: dk.aau.cs.giraf.weekplanner
#          releaseFile: build/app/outputs/bundle/release/app-release.aab
#
#  # iOS Build and Upload
#  build-and-test-ios:
#    name: iOS on macos-latest
#    runs-on: macos-latest
#    steps:
#      - uses: actions/checkout@v2
#      - uses: actions/setup-java@v1
#        with:
#          java-version: ${{ env.java_version }}
#      - uses: subosito/flutter-action@v1
#        with:
#          flutter-version: ${{ env.flutter_version }}
#          channel: ${{ env.flutter_channel }}
#      - name: Set XCode 11.4
#        run: |
#          sudo xcode-select -s /Applications/Xcode_11.4.app/Contents/Developer
#          xcodebuild -version
#      - uses: Apple-Actions/import-codesign-certs@v1
#        with:
#          p12-file-base64: ${{ secrets.APPSTORE_P12_BASE64 }}
#          p12-password: ${{ secrets.APPSTORE_P12_PASSWORD }}
#      - uses: Apple-Actions/download-provisioning-profiles@v1
#        with:
#          bundle-id: dk.girafsvenner.weekplanner
#          issuer-id: ${{ secrets.APPSTORE_ISSUER_ID }}
#          api-key-id: ${{ secrets.APPSTORE_API_KEY_ID }}
#          api-private-key: ${{ secrets.APPSTORE_API_PRIVATE_KEY }}
#      - run: flutter pub get
#        name: Get dependencies
#      - run: flutter analyze
#        name: Linter
#      - run: flutter test
#        name: Tests
#      - run: |
#          flutter build ios --release --no-codesign --build-number ${{ github.run_id }}
#          cd ios
#          agvtool new-version ${{ github.run_id }}
#          xcodebuild -workspace Runner.xcworkspace \
#                     -scheme Runner \
#                     -sdk iphoneos \
#                     -configuration Release archive \
#                     -archivePath $PWD/build/Runner.xcarchive
#
#          xcodebuild -exportArchive \
#                     -archivePath $PWD/build/Runner.xcarchive \
#                     -exportOptionsPlist Runner/ExportOptions.plist \
#                     -exportPath $PWD/build/ipa
#
#        name: Build for iOS
#        env:
#          FLUTTER_BUILD_NUMBER: ${{ github.run_id }}
#      - name: Upload Artifact
#        uses: actions/upload-artifact@v1.0.0
#        with:
#          name: Giraf Weekplanner iOS
#          path: ios/build/ipa
#
#  deploy-to-appstore:
#    if: github.ref == 'refs/heads/master'
#    needs: build-and-test-ios
#    name: Upload to Apple AppStore
#    runs-on: macos-latest
#    steps:
#      - name: Download artifact
#        uses: actions/download-artifact@v1.0.0
#        with:
#          name: Giraf Weekplanner iOS
#          path: ios/build/ipa
#      - run: ls -alh ios/build/ipa
#      - run: xcrun altool --upload-app --file ios/build/ipa/Runner.ipa --type ios --username "${{ secrets.APPSTORE_USERNAME }}" --password "${{ secrets.APPSTORE_PASSWORD }}"
#        name: Upload IPA
