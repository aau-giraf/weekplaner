# Flutter build
variables:
  projectDirectory: .

jobs:
  - job: Android
    pool:
      vmImage: 'ubuntu-16.04'
    steps:
      #- task: FlutterInstall@0
      - task: Bash@3
        displayName: 'FlutterInstall'
        inputs:
          script: '/bin/wget https://storage.googleapis.com/flutter_infra/releases/stable/linux/flutter_linux_v1.2.1-stable.tar.xz $(FlutterToolPath); /bin/tar xf $(FlutterToolPath)/flutter_linux_v1.2.1-stable.tar.xz'# Write your commands here# Use the environment variables input below to pass secret variables to this script' # Required when targetType == Inline
      - task: Bash@3
        displayName: 'Linter'
        inputs:
          targetType: inline
          script: $(FlutterToolPath)/flutter analyze
      - task: FlutterBuild@0
        inputs:
          target: apk
          projectDirectory: $(projectDirectory)
      - task: FlutterTest@0
        inputs:
          projectDirectory: $(projectDirectory)
      - task: CopyFiles@2
        inputs:
          contents: '**/*.apk'
          targetFolder: '$(build.artifactStagingDirectory)'
      - task: PublishBuildArtifacts@1
        inputs:
          pathtoPublish: '$(Build.ArtifactStagingDirectory)'
          artifactName: Android
  #- job: iOS
  #  pool:
  #    vmImage: 'macOS-10.13'
  #  steps:
  #    - task: InstallAppleCertificate@2
  #      inputs:
  #        certSecureFile: 'cert.p12'
  #    - task: InstallAppleProvisioningProfile@1
  #      inputs:
  #        provProfileSecureFile: '82a27128-6283-49f0-90a3-2440591810d1.mobileprovision'
  #    - task: FlutterInstall@0
  #    - task: Bash@3
  #      displayName: 'Linter'
  #      inputs:
  #        targetType: inline
  #        script: $(FlutterToolPath)/flutter analyze
  #    - task: FlutterBuild@0
  #      inputs:
  #        target: ios
  #        projectDirectory: $(projectDirectory)
  #    - task: ArchiveFiles@2
  #      inputs:
  #        rootFolderOrFile: '$(projectDirectory)/build/ios/iphoneos/Runner.app'
  #        includeRootFolder: true
  #        rchiveType: 'zip'
  #        archiveFile: '$(Build.ArtifactStagingDirectory)/ios_app.zip'
  #    - task: PublishBuildArtifacts@1
  #      inputs:
  #        pathtoPublish: $(build.artifactStagingDirectory)
  #        artifactName: iOS (iPhone, iPad)
