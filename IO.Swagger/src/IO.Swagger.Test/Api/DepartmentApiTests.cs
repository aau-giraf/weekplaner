/* 
 * My API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using IO.Swagger.Client;
using IO.Swagger.Api;
using IO.Swagger.Model;

namespace IO.Swagger.Test
{
    /// <summary>
    ///  Class for testing DepartmentApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class DepartmentApiTests
    {
        private DepartmentApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new DepartmentApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of DepartmentApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' DepartmentApi
            //Assert.IsInstanceOfType(typeof(DepartmentApi), instance, "instance is a DepartmentApi");
        }

        
        /// <summary>
        /// Test V1DepartmentByIdCitizensGet
        /// </summary>
        [Test]
        public void V1DepartmentByIdCitizensGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long? id = null;
            //var response = instance.V1DepartmentByIdCitizensGet(id);
            //Assert.IsInstanceOf<ResponseListUserNameDTO> (response, "response is ResponseListUserNameDTO");
        }
        
        /// <summary>
        /// Test V1DepartmentByIdGet
        /// </summary>
        [Test]
        public void V1DepartmentByIdGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long? id = null;
            //var response = instance.V1DepartmentByIdGet(id);
            //Assert.IsInstanceOf<ResponseDepartmentDTO> (response, "response is ResponseDepartmentDTO");
        }
        
        /// <summary>
        /// Test V1DepartmentGet
        /// </summary>
        [Test]
        public void V1DepartmentGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.V1DepartmentGet();
            //Assert.IsInstanceOf<ResponseListDepartmentDTO> (response, "response is ResponseListDepartmentDTO");
        }
        
        /// <summary>
        /// Test V1DepartmentPost
        /// </summary>
        [Test]
        public void V1DepartmentPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //DepartmentDTO depDTO = null;
            //var response = instance.V1DepartmentPost(depDTO);
            //Assert.IsInstanceOf<ResponseDepartmentDTO> (response, "response is ResponseDepartmentDTO");
        }
        
        /// <summary>
        /// Test V1DepartmentResourceByDepartmentIDPost
        /// </summary>
        [Test]
        public void V1DepartmentResourceByDepartmentIDPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long? departmentID = null;
            //ResourceIdDTO resourceDTO = null;
            //var response = instance.V1DepartmentResourceByDepartmentIDPost(departmentID, resourceDTO);
            //Assert.IsInstanceOf<ResponseDepartmentDTO> (response, "response is ResponseDepartmentDTO");
        }
        
        /// <summary>
        /// Test V1DepartmentResourceDelete
        /// </summary>
        [Test]
        public void V1DepartmentResourceDeleteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ResourceIdDTO resourceDTO = null;
            //var response = instance.V1DepartmentResourceDelete(resourceDTO);
            //Assert.IsInstanceOf<ResponseDepartmentDTO> (response, "response is ResponseDepartmentDTO");
        }
        
        /// <summary>
        /// Test V1DepartmentUserByDepartmentIDDelete
        /// </summary>
        [Test]
        public void V1DepartmentUserByDepartmentIDDeleteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long? departmentID = null;
            //GirafUserDTO usr = null;
            //var response = instance.V1DepartmentUserByDepartmentIDDelete(departmentID, usr);
            //Assert.IsInstanceOf<ResponseDepartmentDTO> (response, "response is ResponseDepartmentDTO");
        }
        
        /// <summary>
        /// Test V1DepartmentUserByDepartmentIDPost
        /// </summary>
        [Test]
        public void V1DepartmentUserByDepartmentIDPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long? departmentID = null;
            //GirafUserDTO usr = null;
            //var response = instance.V1DepartmentUserByDepartmentIDPost(departmentID, usr);
            //Assert.IsInstanceOf<ResponseDepartmentDTO> (response, "response is ResponseDepartmentDTO");
        }
        
    }

}
